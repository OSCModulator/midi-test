// Generated by CoffeeScript 1.7.1
(function() {
  var inputs, list, midi, parse, start,
    __slice = [].slice;

  midi = require('midi');

  parse = function(port, msg) {
    var channel;
    channel = msg[0] % 16 + 1;
    switch (msg[0] / 16) {
      case 0xB:
        return ["/" + channel + "/cc/" + msg[1], msg[2] / 127.0];
      case 0x9:
        return ["/" + channel + "/note/" + msg[1], msg[2] / 127.0];
      case 0x8:
        return ["/" + channel + "/note/" + msg[1], 0];
      case 0xE:
        return ["/" + channel + "/pitchbend/", msg[1] / 127.0];
      default:
        return ___.apply(null, [void 0, 'message:'].concat(__slice.call(msg)));
    }
  };

  start = function(port, virtual) {
    var midi_in;
    if (virtual == null) {
      virtual = false;
    }
    midi_in = new midi.input();
    midi_in["open" + (virtual && 'Virtual' || '') + "Port"](port);
    return midi_in.on('message', function(deltaTime, msg) {
      return console.log("message received " + msg);
    });
  };

  inputs = function() {
    var i, tmp, _i, _ref, _results;
    tmp = new midi.input();
    console.log("port count is " + (tmp.getPortCount()));
    _results = [];
    for (i = _i = 0, _ref = tmp.getPortCount(); 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      _results.push(tmp.getPortName(i));
    }
    return _results;
  };

  console.log('starting test');

  list = inputs();

  console.log("first port = " + list[0]);

  start(0);

}).call(this);

//# sourceMappingURL=midi-test.map
